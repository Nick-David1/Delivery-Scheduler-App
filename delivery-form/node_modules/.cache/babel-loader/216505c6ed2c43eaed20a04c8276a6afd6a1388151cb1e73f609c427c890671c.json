{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasdavid/delivery-scheduler-app/delivery-form/src/AddressAutocomplete.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddressAutocomplete({\n  setDeliveryAddress,\n  setCity,\n  setRegion,\n  setCountry,\n  setPostalCode\n}) {\n  _s();\n  const addressInputRef = useRef(null);\n  useEffect(() => {\n    const handleScriptLoad = () => {\n      const autocomplete = new window.google.maps.places.Autocomplete(addressInputRef.current, {\n        componentRestrictions: {\n          country: ['us']\n        },\n        fields: ['address_components'],\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place) {\n          setDeliveryAddress(extractAddress(place));\n          setCity(extractCity(place));\n          setRegion(extractRegion(place));\n          setCountry(extractCountry(place));\n          setPostalCode(extractPostalCode(place));\n        }\n      });\n    };\n    if (!window.google) {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n      script.onload = handleScriptLoad;\n      document.head.appendChild(script);\n    } else {\n      handleScriptLoad();\n    }\n  }, []);\n  const extractAddress = place => {\n    let address = '';\n    const streetNumber = extractComponent(place, 'street_number');\n    const route = extractComponent(place, 'route');\n    if (streetNumber) {\n      address += streetNumber + ' ';\n    }\n    if (route) {\n      address += route;\n    }\n    return address.trim();\n  };\n  const extractComponent = (place, componentType) => {\n    for (const component of place.address_components) {\n      if (component.types.includes(componentType)) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n  const extractCity = place => {\n    for (const component of place.address_components) {\n      if (component.types.includes('locality')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n  const extractRegion = place => {\n    for (const component of place.address_components) {\n      if (component.types.includes('administrative_area_level_1')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n  const extractCountry = place => {\n    for (const component of place.address_components) {\n      if (component.types.includes('country')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n  const extractPostalCode = place => {\n    for (const component of place.address_components) {\n      if (component.types.includes('postal_code')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: addressInputRef,\n      type: \"text\",\n      placeholder: \"Delivery Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(AddressAutocomplete, \"vlXaBwUpwmzK3/mkS99rONP0BDM=\");\n_c = AddressAutocomplete;\nexport default AddressAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"AddressAutocomplete\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AddressAutocomplete","setDeliveryAddress","setCity","setRegion","setCountry","setPostalCode","_s","addressInputRef","handleScriptLoad","autocomplete","window","google","maps","places","Autocomplete","current","componentRestrictions","country","fields","types","addListener","place","getPlace","extractAddress","extractCity","extractRegion","extractCountry","extractPostalCode","script","document","createElement","src","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","async","defer","onload","head","appendChild","address","streetNumber","extractComponent","route","trim","componentType","component","address_components","includes","long_name","children","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nicholasdavid/delivery-scheduler-app/delivery-form/src/AddressAutocomplete.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction AddressAutocomplete({ setDeliveryAddress, setCity, setRegion, setCountry, setPostalCode }) {\n  const addressInputRef = useRef(null);\n\n  useEffect(() => {\n    const handleScriptLoad = () => {\n      const autocomplete = new window.google.maps.places.Autocomplete(\n        addressInputRef.current,\n        {\n          componentRestrictions: { country: ['us'] },\n          fields: ['address_components'],\n          types: ['address']\n        }\n      );\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place) {\n          setDeliveryAddress(extractAddress(place));\n          setCity(extractCity(place));\n          setRegion(extractRegion(place));\n          setCountry(extractCountry(place));\n          setPostalCode(extractPostalCode(place));\n        }\n      });\n    };\n\n    if (!window.google) {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n      script.onload = handleScriptLoad;\n      document.head.appendChild(script);\n    } else {\n      handleScriptLoad();\n    }\n  }, []);\n\n  const extractAddress = (place) => {\n    let address = '';\n    const streetNumber = extractComponent(place, 'street_number');\n    const route = extractComponent(place, 'route');\n\n    if (streetNumber) {\n      address += streetNumber + ' ';\n    }\n    if (route) {\n      address += route;\n    }\n\n    return address.trim();\n  };\n\n  const extractComponent = (place, componentType) => {\n    for (const component of place.address_components) {\n      if (component.types.includes(componentType)) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n\n  const extractCity = (place) => {\n    for (const component of place.address_components) {\n      if (component.types.includes('locality')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n\n  const extractRegion = (place) => {\n    for (const component of place.address_components) {\n      if (component.types.includes('administrative_area_level_1')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n\n  const extractCountry = (place) => {\n    for (const component of place.address_components) {\n      if (component.types.includes('country')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n\n  const extractPostalCode = (place) => {\n    for (const component of place.address_components) {\n      if (component.types.includes('postal_code')) {\n        return component.long_name;\n      }\n    }\n    return '';\n  };\n\n  return (\n    <div>\n      <input ref={addressInputRef} type=\"text\" placeholder=\"Delivery Address\" />\n    </div>\n  );\n}\n\nexport default AddressAutocomplete;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}