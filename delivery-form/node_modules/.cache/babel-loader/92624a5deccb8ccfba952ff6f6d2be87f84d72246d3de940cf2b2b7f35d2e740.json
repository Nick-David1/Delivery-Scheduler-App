{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasdavid/Delivery-Scheduler-App/delivery-form/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { format, addDays, getHours, getDay, startOfDay } from 'date-fns';\nimport { formatInTimeZone } from 'date-fns-tz';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputMask from 'react-input-mask';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TIMEZONE = 'America/Denver';\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/success\",\n        element: /*#__PURE__*/_jsxDEV(SuccessPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction Form() {\n  _s();\n  const [orderNumber, setOrderNumber] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [streetAddress, setStreetAddress] = useState('');\n  const [streetAddress2, setStreetAddress2] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [deliveryDate, setDeliveryDate] = useState(null);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [unavailableDates, setUnavailableDates] = useState([]);\n  const [addressSelected, setAddressSelected] = useState(false);\n  const [contactlessDelivery, setContactlessDelivery] = useState(false);\n  const [deliveryInstructions, setDeliveryInstructions] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUnavailableDates = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/unavailable-dates');\n        const data = await response.json();\n        setUnavailableDates(data.unavailableDates || []); // Ensure unavailableDates is always an array\n      } catch (error) {\n        console.error('Error fetching unavailable dates:', error);\n        setUnavailableDates([]); // Set to an empty array on error\n      }\n    };\n    fetchUnavailableDates();\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places&callback=initAutocomplete`;\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n    script.addEventListener('load', () => {\n      console.log('Google Maps script loaded');\n      if (window.google) {\n        console.log('Google Maps available');\n        initAutocomplete();\n      }\n    });\n  }, []);\n  const initAutocomplete = () => {\n    const input = document.getElementById('streetAddress');\n    const options = {\n      componentRestrictions: {\n        country: 'us'\n      },\n      fields: ['address_components', 'geometry', 'icon', 'name'],\n      types: ['address']\n    };\n    const autocomplete = new window.google.maps.places.Autocomplete(input, options);\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place.address_components) {\n        const addressComponents = place.address_components;\n        const getAddressComponent = type => {\n          var _addressComponents$fi;\n          return ((_addressComponents$fi = addressComponents.find(component => component.types.includes(type))) === null || _addressComponents$fi === void 0 ? void 0 : _addressComponents$fi.long_name) || '';\n        };\n        setStreetAddress(`${getAddressComponent('street_number')} ${getAddressComponent('route')}`);\n        setCity(getAddressComponent('locality'));\n        setState(getAddressComponent('administrative_area_level_1'));\n        setZipCode(getAddressComponent('postal_code'));\n        setAddressSelected(true);\n      }\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let hasError = false;\n    const requiredFields = [{\n      id: 'orderNumber',\n      value: orderNumber\n    }, {\n      id: 'firstName',\n      value: firstName\n    }, {\n      id: 'lastName',\n      value: lastName\n    }, {\n      id: 'email',\n      value: email\n    }, {\n      id: 'phoneNumber',\n      value: phoneNumber\n    }, {\n      id: 'streetAddress',\n      value: streetAddress\n    }, {\n      id: 'city',\n      value: city\n    }, {\n      id: 'state',\n      value: state\n    }, {\n      id: 'zipCode',\n      value: zipCode\n    }, {\n      id: 'deliveryDate',\n      value: deliveryDate\n    }];\n    requiredFields.forEach(field => {\n      const element = document.getElementById(field.id);\n      if (!field.value) {\n        setError('* fields are required');\n        element === null || element === void 0 ? void 0 : element.classList.add('error');\n        hasError = true;\n      } else {\n        element === null || element === void 0 ? void 0 : element.classList.remove('error');\n      }\n    });\n    if (!addressSelected) {\n      var _document$getElementB;\n      setError('Please use the autocomplete feature to select an address.');\n      (_document$getElementB = document.getElementById('streetAddress')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.add('error');\n      hasError = true;\n    }\n    if (!deliveryDate) {\n      var _document$getElementB2;\n      setError('Please select a delivery date.');\n      (_document$getElementB2 = document.getElementById('deliveryDate')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.classList.add('error');\n      hasError = true;\n    }\n    if (hasError) {\n      return;\n    }\n    setError('');\n    setSuccessMessage('');\n    const name = `${firstName} ${lastName}`;\n    const deliveryAddress = `${streetAddress} ${streetAddress2}, ${city}, ${state}, ${zipCode}`;\n    const submissionDateTime = format(new Date(), \"yyyy-MM-dd HH:mm a\");\n    const zonedDeliveryDate = formatInTimeZone(deliveryDate, TIMEZONE, \"yyyy-MM-dd\");\n    const postData = {\n      orderNumber,\n      name,\n      email,\n      phoneNumber,\n      deliveryAddress,\n      deliveryDate: zonedDeliveryDate,\n      submissionDateTime,\n      contactlessDelivery: contactlessDelivery ? 'Yes' : 'No',\n      deliveryInstructions\n    };\n    console.log('Posting data:', postData); // Debugging\n\n    // Send data to the server\n    try {\n      const response = await fetch('http://localhost:5001/api/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      const data = await response.json();\n      console.log('Success:', data);\n      setSuccessMessage('Order details submitted successfully!');\n      navigate('/success', {\n        state: {\n          deliveryDate: zonedDeliveryDate,\n          email\n        }\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Error submitting order details.');\n    }\n  };\n  const handleInputChange = (setter, id) => event => {\n    var _document$getElementB3;\n    setter(event.target.value);\n    (_document$getElementB3 = document.getElementById(id)) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.classList.remove('error');\n  };\n  const handleOrderNumberChange = event => {\n    const value = event.target.value.replace(/\\D/g, '');\n    setOrderNumber(value);\n  };\n  const handleDeliveryInstructionsChange = event => {\n    const words = event.target.value.split(' ');\n    if (words.length <= 250) {\n      setDeliveryInstructions(event.target.value);\n    }\n  };\n  const isDateSelectable = date => {\n    if (!Array.isArray(unavailableDates)) {\n      return false; // Ensure unavailableDates is an array\n    }\n    const today = new Date();\n    const currentHour = getHours(today);\n    const daysToAdd = currentHour >= 19 ? 4 : 3;\n    const end = startOfDay(addDays(today, daysToAdd));\n    if (currentHour >= 19 && format(date, \"yyyy-MM-dd\") === format(addDays(today, 1), \"yyyy-MM-dd\")) {\n      return false;\n    }\n    const formattedDate = format(startOfDay(date), \"yyyy-MM-dd\");\n    const isUnavailable = unavailableDates.includes(formattedDate);\n    const isSunday = getDay(date) === 0;\n    return date >= addDays(today, 1) && date <= end && !isUnavailable && !isSunday;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Schedule Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"orderNumber\",\n        className: \"required\",\n        children: \"Order #\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"orderNumber\",\n        value: orderNumber,\n        onChange: handleOrderNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"required\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          placeholder: \"First Name\",\n          value: firstName,\n          onChange: handleInputChange(setFirstName, 'firstName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          placeholder: \"Last Name\",\n          value: lastName,\n          onChange: handleInputChange(setLastName, 'lastName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"required\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Enter valid email\",\n        value: email,\n        onChange: handleInputChange(setEmail, 'email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        className: \"required\",\n        children: \"Phone Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        mask: \"(999) 999-9999\",\n        value: phoneNumber,\n        onChange: handleInputChange(setPhoneNumber, 'phoneNumber'),\n        maskChar: \"_\",\n        children: () => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phoneNumber\",\n          placeholder: \"(___) ___-____\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"streetAddress\",\n        className: \"required\",\n        children: \"Street Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"streetAddress\",\n        placeholder: \"Enter a location\",\n        value: streetAddress,\n        onChange: handleInputChange(setStreetAddress, 'streetAddress')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), addressSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"streetAddress2\",\n              children: \"Address Line 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"streetAddress2\",\n              value: streetAddress2,\n              onChange: e => setStreetAddress2(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              className: \"required\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"city\",\n              value: city,\n              onChange: handleInputChange(setCity, 'city')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"state\",\n              className: \"required\",\n              children: \"State / Province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"state\",\n              value: state,\n              onChange: handleInputChange(setState, 'state')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"zipCode\",\n              className: \"required\",\n              children: \"Postal / Zip Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"zipCode\",\n              value: zipCode,\n              onChange: handleInputChange(setZipCode, 'zipCode')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deliveryDate\",\n        className: \"required label-with-padding\",\n        children: \"Delivery Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: deliveryDate,\n          onChange: date => {\n            var _document$getElementB4;\n            setDeliveryDate(startOfDay(date)); // Ensure the date is set to start of the day\n            (_document$getElementB4 = document.getElementById('deliveryDate')) === null || _document$getElementB4 === void 0 ? void 0 : _document$getElementB4.classList.remove('error');\n          },\n          filterDate: isDateSelectable,\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactless-delivery\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"contactlessDelivery\",\n          checked: contactlessDelivery,\n          onChange: () => setContactlessDelivery(!contactlessDelivery)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"cd-padding\",\n          htmlFor: \"contactlessDelivery\",\n          children: \"Request Contactless Delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), contactlessDelivery && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delivery-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deliveryInstructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"deliveryInstructions\",\n          placeholder: \"Add special delivery instructions (e.g., setup in living room, access code 1234, use side entrance, etc.)\",\n          value: deliveryInstructions,\n          onChange: handleDeliveryInstructionsChange,\n          maxLength: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"disclaimer\",\n        children: \" Disclaimer: Apartment stairwells, house stairwells, or basement deliveries cost an extra $60, payable at delivery via cash, Venmo, or Zelle to the third-party. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitbutton\",\n        type: \"submit\",\n        children: \"Schedule Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"6X+8cIE0l+Dz+QvW+OjRLkYRes0=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Form;\nfunction SuccessPage() {\n  _s2();\n  const location = useLocation();\n  const {\n    deliveryDate,\n    email\n  } = location.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"success-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submission Successful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your delivery date is on \", format(new Date(deliveryDate), 'MMMM d, yyyy')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"A confirmation email has been sent to: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n}\n_s2(SuccessPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c3 = SuccessPage;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"SuccessPage\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useNavigate","useLocation","format","addDays","getHours","getDay","startOfDay","formatInTimeZone","DatePicker","InputMask","jsxDEV","_jsxDEV","Fragment","_Fragment","TIMEZONE","App","children","path","element","Form","fileName","_jsxFileName","lineNumber","columnNumber","SuccessPage","_c","_s","orderNumber","setOrderNumber","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","streetAddress","setStreetAddress","streetAddress2","setStreetAddress2","city","setCity","state","setState","zipCode","setZipCode","deliveryDate","setDeliveryDate","error","setError","successMessage","setSuccessMessage","unavailableDates","setUnavailableDates","addressSelected","setAddressSelected","contactlessDelivery","setContactlessDelivery","deliveryInstructions","setDeliveryInstructions","navigate","fetchUnavailableDates","response","fetch","data","json","console","script","document","createElement","src","process","env","REACT_APP_GOOGLE_API_KEY","async","defer","head","appendChild","addEventListener","log","window","google","initAutocomplete","input","getElementById","options","componentRestrictions","country","fields","types","autocomplete","maps","places","Autocomplete","addListener","place","getPlace","address_components","addressComponents","getAddressComponent","type","_addressComponents$fi","find","component","includes","long_name","handleSubmit","event","preventDefault","hasError","requiredFields","id","value","forEach","field","classList","add","remove","_document$getElementB","_document$getElementB2","name","deliveryAddress","submissionDateTime","Date","zonedDeliveryDate","postData","method","headers","body","JSON","stringify","handleInputChange","setter","_document$getElementB3","target","handleOrderNumberChange","replace","handleDeliveryInstructionsChange","words","split","length","isDateSelectable","date","Array","isArray","today","currentHour","daysToAdd","end","formattedDate","isUnavailable","isSunday","className","onSubmit","htmlFor","onChange","placeholder","mask","maskChar","e","selected","_document$getElementB4","filterDate","inline","checked","maxLength","_c2","_s2","location","_c3","$RefreshReg$"],"sources":["/Users/nicholasdavid/Delivery-Scheduler-App/delivery-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { format, addDays, getHours, getDay, startOfDay } from 'date-fns';\nimport { formatInTimeZone } from 'date-fns-tz';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputMask from 'react-input-mask';\n\nconst TIMEZONE = 'America/Denver';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Form />} />\n        <Route path=\"/success\" element={<SuccessPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nfunction Form() {\n  const [orderNumber, setOrderNumber] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState(''); \n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [streetAddress, setStreetAddress] = useState('');\n  const [streetAddress2, setStreetAddress2] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [deliveryDate, setDeliveryDate] = useState(null);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [unavailableDates, setUnavailableDates] = useState([]);\n  const [addressSelected, setAddressSelected] = useState(false);\n  const [contactlessDelivery, setContactlessDelivery] = useState(false);\n  const [deliveryInstructions, setDeliveryInstructions] = useState('');\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUnavailableDates = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/unavailable-dates');\n        const data = await response.json();\n        setUnavailableDates(data.unavailableDates || []); // Ensure unavailableDates is always an array\n      } catch (error) {\n        console.error('Error fetching unavailable dates:', error);\n        setUnavailableDates([]); // Set to an empty array on error\n      }\n    };\n    fetchUnavailableDates();\n\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places&callback=initAutocomplete`;\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n    script.addEventListener('load', () => {\n      console.log('Google Maps script loaded');\n      if (window.google) {\n        console.log('Google Maps available');\n        initAutocomplete();\n      }\n    });\n  }, []);\n\n  const initAutocomplete = () => {\n    const input = document.getElementById('streetAddress');\n    const options = {\n      componentRestrictions: { country: 'us' },\n      fields: ['address_components', 'geometry', 'icon', 'name'],\n      types: ['address'],\n    };\n    const autocomplete = new window.google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place.address_components) {\n        const addressComponents = place.address_components;\n        const getAddressComponent = (type) =>\n          addressComponents.find(component => component.types.includes(type))?.long_name || '';\n        \n        setStreetAddress(`${getAddressComponent('street_number')} ${getAddressComponent('route')}`);\n        setCity(getAddressComponent('locality'));\n        setState(getAddressComponent('administrative_area_level_1'));\n        setZipCode(getAddressComponent('postal_code'));\n        setAddressSelected(true);\n      }\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let hasError = false;\n\n    const requiredFields = [\n      { id: 'orderNumber', value: orderNumber },\n      { id: 'firstName', value: firstName },\n      { id: 'lastName', value: lastName },\n      { id: 'email', value: email },\n      { id: 'phoneNumber', value: phoneNumber },\n      { id: 'streetAddress', value: streetAddress },\n      { id: 'city', value: city },\n      { id: 'state', value: state },\n      { id: 'zipCode', value: zipCode },\n      { id: 'deliveryDate', value: deliveryDate },\n    ];\n\n    requiredFields.forEach(field => {\n      const element = document.getElementById(field.id);\n      if (!field.value) {\n        setError('* fields are required');\n        element?.classList.add('error');\n        hasError = true;\n      } else {\n        element?.classList.remove('error');\n      }\n    });\n\n    if (!addressSelected) {\n      setError('Please use the autocomplete feature to select an address.');\n      document.getElementById('streetAddress')?.classList.add('error');\n      hasError = true;\n    }\n\n    if (!deliveryDate) {\n      setError('Please select a delivery date.');\n      document.getElementById('deliveryDate')?.classList.add('error');\n      hasError = true;\n    }\n\n    if (hasError) {\n      return;\n    }\n\n    setError('');\n    setSuccessMessage('');\n    const name = `${firstName} ${lastName}`;\n    const deliveryAddress = `${streetAddress} ${streetAddress2}, ${city}, ${state}, ${zipCode}`;\n    const submissionDateTime = format(new Date(), \"yyyy-MM-dd HH:mm a\");\n    const zonedDeliveryDate = formatInTimeZone(deliveryDate, TIMEZONE, \"yyyy-MM-dd\");\n\n    const postData = {\n      orderNumber,\n      name,\n      email, \n      phoneNumber,\n      deliveryAddress,\n      deliveryDate: zonedDeliveryDate,\n      submissionDateTime,\n      contactlessDelivery: contactlessDelivery ? 'Yes' : 'No',\n      deliveryInstructions\n    };\n\n    console.log('Posting data:', postData); // Debugging\n\n    // Send data to the server\n    try {\n      const response = await fetch('http://localhost:5001/api/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData),\n      });\n      const data = await response.json();\n      console.log('Success:', data);\n      setSuccessMessage('Order details submitted successfully!');\n      navigate('/success', { state: { deliveryDate: zonedDeliveryDate, email } });\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Error submitting order details.');\n    }\n  };\n\n  const handleInputChange = (setter, id) => (event) => {\n    setter(event.target.value);\n    document.getElementById(id)?.classList.remove('error');\n  };\n\n  const handleOrderNumberChange = (event) => {\n    const value = event.target.value.replace(/\\D/g, '');\n    setOrderNumber(value);\n  };\n\n  const handleDeliveryInstructionsChange = (event) => {\n    const words = event.target.value.split(' ');\n    if (words.length <= 250) {\n      setDeliveryInstructions(event.target.value);\n    }\n  };\n\n  const isDateSelectable = (date) => {\n    if (!Array.isArray(unavailableDates)) {\n      return false; // Ensure unavailableDates is an array\n    }\n\n    const today = new Date();\n    const currentHour = getHours(today);\n    const daysToAdd = currentHour >= 19 ? 4 : 3;\n    const end = startOfDay(addDays(today, daysToAdd));\n\n    if (currentHour >= 19 && format(date, \"yyyy-MM-dd\") === format(addDays(today, 1), \"yyyy-MM-dd\")) {\n      return false;\n    }\n\n    const formattedDate = format(startOfDay(date), \"yyyy-MM-dd\");\n    const isUnavailable = unavailableDates.includes(formattedDate);\n    const isSunday = getDay(date) === 0;\n    return date >= addDays(today, 1) && date <= end && !isUnavailable && !isSunday;\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <h1>Schedule Delivery</h1>\n        <label htmlFor=\"orderNumber\" className=\"required\">Order #</label>\n        <input\n          type=\"text\"\n          id=\"orderNumber\"\n          value={orderNumber}\n          onChange={handleOrderNumberChange}\n        />\n        \n        <label htmlFor=\"name\" className=\"required\">Name</label>\n        <div className=\"name-fields\">\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            placeholder=\"First Name\"\n            value={firstName}\n            onChange={handleInputChange(setFirstName, 'firstName')}\n          />\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            placeholder=\"Last Name\"\n            value={lastName}\n            onChange={handleInputChange(setLastName, 'lastName')}\n          />\n        </div>\n\n        <label htmlFor=\"email\" className=\"required\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          placeholder=\"Enter valid email\"\n          value={email}\n          onChange={handleInputChange(setEmail, 'email')}\n        />\n\n        <label htmlFor=\"phoneNumber\" className=\"required\">Phone Number</label>\n        <InputMask\n          mask=\"(999) 999-9999\"\n          value={phoneNumber}\n          onChange={handleInputChange(setPhoneNumber, 'phoneNumber')}\n          maskChar=\"_\"\n        >\n          {() => <input\n            type=\"text\"\n            id=\"phoneNumber\"\n            placeholder=\"(___) ___-____\"\n          />}\n        </InputMask>\n\n        <label htmlFor=\"streetAddress\" className=\"required\">Street Address</label>\n        <input\n          type=\"text\"\n          id=\"streetAddress\"\n          placeholder=\"Enter a location\"\n          value={streetAddress}\n          onChange={handleInputChange(setStreetAddress, 'streetAddress')}\n        />\n\n        {addressSelected && (\n          <>\n            <div className=\"address-fields\">\n              <div className=\"address-field\">\n                <label htmlFor=\"streetAddress2\">Address Line 2</label>\n                <input\n                  type=\"text\"\n                  id=\"streetAddress2\"\n                  value={streetAddress2}\n                  onChange={(e) => setStreetAddress2(e.target.value)}\n                />\n              </div>\n\n              <div className=\"address-field\">\n                <label htmlFor=\"city\" className=\"required\">City</label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  value={city}\n                  onChange={handleInputChange(setCity, 'city')}\n                />\n              </div>\n            </div>\n\n            <div className=\"address-fields\">\n              <div className=\"address-field\">\n                <label htmlFor=\"state\" className=\"required\">State / Province</label>\n                <input\n                  type=\"text\"\n                  id=\"state\"\n                  value={state}\n                  onChange={handleInputChange(setState, 'state')}\n                />\n              </div>\n\n              <div className=\"address-field\">\n                <label htmlFor=\"zipCode\" className=\"required\">Postal / Zip Code</label>\n                <input\n                  type=\"text\"\n                  id=\"zipCode\"\n                  value={zipCode}\n                  onChange={handleInputChange(setZipCode, 'zipCode')}\n                />\n              </div>\n            </div>\n          </>\n        )}\n\n        <label htmlFor=\"deliveryDate\" className=\"required label-with-padding\">Delivery Date</label>\n        <div>\n          <DatePicker\n            selected={deliveryDate}\n            onChange={(date) => {\n              setDeliveryDate(startOfDay(date)); // Ensure the date is set to start of the day\n              document.getElementById('deliveryDate')?.classList.remove('error');\n            }}\n            filterDate={isDateSelectable}\n            inline\n          />\n        </div>\n\n        <div className=\"contactless-delivery\">\n          <input\n            type=\"checkbox\"\n            id=\"contactlessDelivery\"\n            checked={contactlessDelivery}\n            onChange={() => setContactlessDelivery(!contactlessDelivery)}\n          />\n          <label className=\"cd-padding\" htmlFor=\"contactlessDelivery\">Request Contactless Delivery</label>\n        </div>\n\n        {contactlessDelivery && (\n          <div className=\"delivery-instructions\">\n            <label htmlFor=\"deliveryInstructions\"></label>\n            <textarea\n              id=\"deliveryInstructions\"\n              placeholder=\"Add special delivery instructions (e.g., setup in living room, access code 1234, use side entrance, etc.)\"\n              value={deliveryInstructions}\n              onChange={handleDeliveryInstructionsChange}\n              maxLength={1000}\n            />\n          \n          </div>\n            \n        )}\n      <p className=\"disclaimer\"> Disclaimer: Apartment stairwells, house stairwells, or basement deliveries cost an extra $60, payable at delivery via cash, Venmo, or Zelle to the third-party. </p>\n\n        {error && <div className=\"error\">{error}</div>}\n        {successMessage && <div className=\"success\">{successMessage}</div>}\n        <button className=\"submitbutton\" type=\"submit\">Schedule Now</button>\n      </form>\n    </div>\n  );\n}\n\nfunction SuccessPage() {\n  const location = useLocation();\n  const { deliveryDate, email } = location.state;\n\n  return (\n    <div className=\"success-page\">\n      <h1>Submission Successful</h1>\n      <p>Your delivery date is on {format(new Date(deliveryDate), 'MMMM d, yyyy')}</p>\n      <p>A confirmation email has been sent to: {email}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}